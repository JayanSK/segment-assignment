{"ast":null,"code":"var _jsxFileName = \"C:\\\\Jayan\\\\segment-task\\\\src\\\\Segment.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Segment.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schemaOptions = [{\n  label: 'First Name',\n  value: 'first_name'\n}, {\n  label: 'Last Name',\n  value: 'last_name'\n}, {\n  label: 'Gender',\n  value: 'gender'\n}, {\n  label: 'Age',\n  value: 'age'\n}, {\n  label: 'Account Name',\n  value: 'account_name'\n}, {\n  label: 'City',\n  value: 'city'\n}, {\n  label: 'State',\n  value: 'state'\n}];\nconst CORS_PROXY = 'https://cors-anywhere.herokuapp.com/';\nconst WEBHOOK_URL = 'https://webhook.site/d2ace6fc-7199-4116-aad4-bf6ecb0f32e7';\nconst SegmentCreator = () => {\n  _s();\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [segmentName, setSegmentName] = useState('');\n  const [selectedSchemas, setSelectedSchemas] = useState([]);\n  const [currentSchema, setCurrentSchema] = useState('');\n  const [isSaving, setIsSaving] = useState(false);\n  const [saveError, setSaveError] = useState('');\n  const handleSaveSegment = () => {\n    setIsPopupOpen(true);\n  };\n  const handleClosePopup = () => {\n    setIsPopupOpen(false);\n    setSegmentName('');\n    setSelectedSchemas([]);\n    setCurrentSchema('');\n    setSaveError('');\n  };\n  const handleAddSchema = () => {\n    if (currentSchema) {\n      setSelectedSchemas([...selectedSchemas, currentSchema]);\n      setCurrentSchema('');\n    }\n  };\n  const handleRemoveSchema = index => {\n    const newSchemas = [...selectedSchemas];\n    newSchemas.splice(index, 1);\n    setSelectedSchemas(newSchemas);\n  };\n  const handleSaveToServer = async () => {\n    setIsSaving(true);\n    setSaveError('');\n    const data = {\n      segment_name: segmentName,\n      schema: selectedSchemas.map(schema => ({\n        [schema]: schemaOptions.find(opt => opt.value === schema).label\n      }))\n    };\n    try {\n      const response = await fetch(CORS_PROXY + WEBHOOK_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      if (response.ok) {\n        console.log('Data sent successfully to webhook');\n        handleClosePopup();\n      } else {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n    } catch (error) {\n      console.error('Error sending data to webhook:', error);\n      setSaveError('Failed to save segment. Please try again.');\n    } finally {\n      setIsSaving(false);\n    }\n  };\n  const availableOptions = schemaOptions.filter(option => !selectedSchemas.includes(option.value));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: handleSaveSegment,\n      children: \"Save segment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), isPopupOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Saving Segment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"close\",\n            onClick: handleClosePopup,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control mb-3\",\n            placeholder: \"Enter the Name of the Segment\",\n            id: \"name-of-the-segment\",\n            value: segmentName,\n            onChange: e => setSegmentName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"To save your segment, you need to add the schemas to build the query\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"schema-box mb-3\",\n            children: selectedSchemas.map((schema, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-2 d-flex align-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"form-control mr-2\",\n                value: schema,\n                onChange: e => {\n                  const newSchemas = [...selectedSchemas];\n                  newSchemas[index] = e.target.value;\n                  setSelectedSchemas(newSchemas);\n                },\n                children: schemaOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: option.value,\n                  children: option.label\n                }, option.value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-danger\",\n                onClick: () => handleRemoveSchema(index),\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control mb-2\",\n            value: currentSchema,\n            onChange: e => setCurrentSchema(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Add schema to segment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this), availableOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.value,\n              children: option.label\n            }, option.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-link mb-3\",\n            onClick: handleAddSchema,\n            children: \"+ Add new schema\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this), saveError && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-danger mb-2\",\n            children: saveError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary mr-2\",\n            onClick: handleClosePopup,\n            disabled: isSaving,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: handleSaveToServer,\n            disabled: isSaving,\n            children: isSaving ? 'Saving...' : 'Save the Segment'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(SegmentCreator, \"nyIGPoBX+sd+obIUYSpdJIiRifQ=\");\n_c = SegmentCreator;\nexport default SegmentCreator;\nvar _c;\n$RefreshReg$(_c, \"SegmentCreator\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","schemaOptions","label","value","CORS_PROXY","WEBHOOK_URL","SegmentCreator","_s","isPopupOpen","setIsPopupOpen","segmentName","setSegmentName","selectedSchemas","setSelectedSchemas","currentSchema","setCurrentSchema","isSaving","setIsSaving","saveError","setSaveError","handleSaveSegment","handleClosePopup","handleAddSchema","handleRemoveSchema","index","newSchemas","splice","handleSaveToServer","data","segment_name","schema","map","find","opt","response","fetch","method","headers","body","JSON","stringify","ok","console","log","Error","status","error","availableOptions","filter","option","includes","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","id","onChange","e","target","disabled","_c","$RefreshReg$"],"sources":["C:/Jayan/segment-task/src/Segment.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Segment.css';\r\nconst schemaOptions = [\r\n  { label: 'First Name', value: 'first_name' },\r\n  { label: 'Last Name', value: 'last_name' },\r\n  { label: 'Gender', value: 'gender' },\r\n  { label: 'Age', value: 'age' },\r\n  { label: 'Account Name', value: 'account_name' },\r\n  { label: 'City', value: 'city' },\r\n  { label: 'State', value: 'state' },\r\n];\r\n\r\nconst CORS_PROXY = 'https://cors-anywhere.herokuapp.com/';\r\nconst WEBHOOK_URL = 'https://webhook.site/d2ace6fc-7199-4116-aad4-bf6ecb0f32e7';\r\n\r\nconst SegmentCreator = () => {\r\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\r\n  const [segmentName, setSegmentName] = useState('');\r\n  const [selectedSchemas, setSelectedSchemas] = useState([]);\r\n  const [currentSchema, setCurrentSchema] = useState('');\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const [saveError, setSaveError] = useState('');\r\n\r\n  const handleSaveSegment = () => {\r\n    setIsPopupOpen(true);\r\n  };\r\n\r\n  const handleClosePopup = () => {\r\n    setIsPopupOpen(false);\r\n    setSegmentName('');\r\n    setSelectedSchemas([]);\r\n    setCurrentSchema('');\r\n    setSaveError('');\r\n  };\r\n\r\n  const handleAddSchema = () => {\r\n    if (currentSchema) {\r\n      setSelectedSchemas([...selectedSchemas, currentSchema]);\r\n      setCurrentSchema('');\r\n    }\r\n  };\r\n\r\n  const handleRemoveSchema = (index) => {\r\n    const newSchemas = [...selectedSchemas];\r\n    newSchemas.splice(index, 1);\r\n    setSelectedSchemas(newSchemas);\r\n  };\r\n\r\n  const handleSaveToServer = async () => {\r\n    setIsSaving(true);\r\n    setSaveError('');\r\n\r\n    const data = {\r\n      segment_name: segmentName,\r\n      schema: selectedSchemas.map(schema => ({ [schema]: schemaOptions.find(opt => opt.value === schema).label }))\r\n    };\r\n\r\n    try {\r\n        const response = await fetch(CORS_PROXY + WEBHOOK_URL, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(data),\r\n        });\r\n      \r\n        if (response.ok) {\r\n          console.log('Data sent successfully to webhook');\r\n          handleClosePopup();\r\n        } else {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error sending data to webhook:', error);\r\n        setSaveError('Failed to save segment. Please try again.');\r\n      } finally {\r\n        setIsSaving(false);\r\n      }\r\n  };\r\n\r\n  const availableOptions = schemaOptions.filter(option => !selectedSchemas.includes(option.value));\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <button className=\"btn btn-primary\" onClick={handleSaveSegment}>Save segment</button>\r\n\r\n      {isPopupOpen && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h2>Saving Segment</h2>\r\n              <button type=\"button\" className=\"close\" onClick={handleClosePopup}>\r\n                <span>&times;</span>\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control mb-3\"\r\n                placeholder=\"Enter the Name of the Segment\"\r\n                id=\"name-of-the-segment\"\r\n                value={segmentName}\r\n                onChange={(e) => setSegmentName(e.target.value)}\r\n              />\r\n              <p>To save your segment, you need to add the schemas to build the query</p>\r\n              <div className=\"schema-box mb-3\">\r\n                {selectedSchemas.map((schema, index) => (\r\n                  <div key={index} className=\"mb-2 d-flex align-items-center\">\r\n                    <select\r\n                      className=\"form-control mr-2\"\r\n                      value={schema}\r\n                      onChange={(e) => {\r\n                        const newSchemas = [...selectedSchemas];\r\n                        newSchemas[index] = e.target.value;\r\n                        setSelectedSchemas(newSchemas);\r\n                      }}\r\n                    >\r\n                      {schemaOptions.map((option) => (\r\n                        <option key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                    <button className=\"btn btn-outline-danger\" onClick={() => handleRemoveSchema(index)}>\r\n                      &times;\r\n                    </button>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <select\r\n                className=\"form-control mb-2\"\r\n                value={currentSchema}\r\n                onChange={(e) => setCurrentSchema(e.target.value)}\r\n              >\r\n                <option value=\"\">Add schema to segment</option>\r\n                {availableOptions.map((option) => (\r\n                  <option key={option.value} value={option.value}>\r\n                    {option.label}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n              <button className=\"btn btn-link mb-3\" onClick={handleAddSchema}>+ Add new schema</button>\r\n              {saveError && <p className=\"text-danger mb-2\">{saveError}</p>}\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button className=\"btn btn-secondary mr-2\" onClick={handleClosePopup} disabled={isSaving}>\r\n                Cancel\r\n              </button>\r\n              <button className=\"btn btn-primary\" onClick={handleSaveToServer} disabled={isSaving}>\r\n                {isSaving ? 'Saving...' : 'Save the Segment'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SegmentCreator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}